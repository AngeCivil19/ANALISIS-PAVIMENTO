# -*- coding: utf-8 -*-
"""ANALISIS_PAVIMENTO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CO-hol0WFbaidTZPFbOZ0bxUytiVSCxx
"""


import pandas as pd
from google.colab import files

# Subir el archivo
uploaded = files.upload()

# Obtener el nombre del archivo subido
file_name = next(iter(uploaded))

# Leer el archivo Excel
df = pd.read_excel(file_name)

# Mostrar el DataFrame
print(df)

# Asumamos que queremos separar las dos primeras columnas en listas
distances = df.iloc[:, 0].tolist()
pavement_conditions = df.iloc[:, 1].tolist()

# Mostrar las columnas
print("Columna 1:", distances)
print("Columna 2:", pavement_conditions)

Xx=len(pavement_conditions)
print(Xx)

from ast import While
# Define parámetros para el modelo de decisión binaria
maintenance_costs = [22000, 12000, 8000, 6000, 4500, 3500]

# Umbral para iniciar el mantenimiento
maintenance_threshold = 5;
import numpy as np

choice = np.zeros(Xx)  # 0: No mantenimiento, 1: Mantenimiento
total_cost = np.zeros(Xx)  # Costo total incluyendo mantenimiento luego de la elección

# Iteración en cada tramo de pavimento y realizar la elección binaria
for i in range(Xx):
    condition = pavement_conditions[i]

    if condition <= maintenance_threshold:
        # Elegir mantenimiento si la condición es igual o menor que el umbral
        choice[i] = 1
        total_cost[i] = maintenance_costs[condition]
    else:
        # No mantener si la condición está por encima del umbral
        choice[i] = 0
        total_cost[i] = 0

# Calcula el costo total de mantenimiento
total_maintenance_cost = np.sum(total_cost)

# Calcula el costo acumulado
cumulative_cost = np.cumsum(total_cost)

# Mostrar resultados
print('Choice:', choice)
print('Total Cost:', total_cost)
print('Cumulative Cost:', cumulative_cost)
print('Total Maintenance Cost:', total_maintenance_cost)

import matplotlib.pyplot as plt

plt.subplot(3,1,1)
plt.plot(distances,pavement_conditions, color=[0.8500, 0.3250, 0.0980])
plt.grid(True)
plt.xlabel('DISTANCIA')
plt.ylabel('CONDICION')
plt.title('Pavement Conditions')


# Datos de ejemplo

plt.subplot(3,1,3)
plt.plot(distances,cumulative_cost, color=[0.8500, 0.3250, 0.0980])
plt.grid(True)
plt.xlabel('DISTANCIA')
plt.ylabel('COSTO MANTENIMIENTO ACUMULADO')
plt.title('Costo Acumulado vs Distancia')
plt.show()

# Datos de ejemplo
